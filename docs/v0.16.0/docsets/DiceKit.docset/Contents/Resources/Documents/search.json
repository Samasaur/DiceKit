{"Structs/Chance.html#/s:7DiceKit6ChanceV1nSivp":{"name":"n","abstract":"<p>The numerator of the fraction</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV1dSivp":{"name":"d","abstract":"<p>The denominator of the fraction</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV5valueSdvp":{"name":"value","abstract":"<p>The decimal representation of the fraction.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV8fractionSi_Sitvp":{"name":"fraction","abstract":"<p>The fraction as a tuple (numerator, denominator).</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV6oneOut2ofACSi_tKFZ":{"name":"oneOut(of:)","abstract":"<p>Creates a new <code>Chance</code> object of the fraction form 1/d.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV_5outOfACSi_SitKcfc":{"name":"init(_:outOf:)","abstract":"<p>Creates a new <code>Chance</code> object of the fraction form n/d.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV8oneOutOfACSi_tKcfc":{"name":"init(oneOutOf:)","abstract":"<p>Creates a new <code>Chance</code> object of the fraction form 1/d.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV13approximatingACSd_tKcfc":{"name":"init(approximating:)","abstract":"<p>Creates a new <code>Chance</code> object approximating the given decimal.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV4zeroACvpZ":{"name":"zero","abstract":"<p>A <code>Chance</code> of zero.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV3oneACvpZ":{"name":"one","abstract":"<p>A <code>Chance</code> of one.</p>","parent_name":"Chance"},"Structs/Chance.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Chance"},"Structs/Chance.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Chance"},"Structs/Chance.html#/s:s25ExpressibleByFloatLiteralP0cD4TypeQa":{"name":"FloatLiteralType","parent_name":"Chance"},"Structs/Chance.html#/s:7DiceKit6ChanceV12floatLiteralACSd_tcfc":{"name":"init(floatLiteral:)","abstract":"<p>Creates a new <code>Chance</code> object approximating the given decimal. There is no error-checking!</p>","parent_name":"Chance"},"Structs/Chances.html#/s:7DiceKit7ChancesVACycfc":{"name":"init()","abstract":"<p>Creates a new <code>Chances</code> object with no data.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:7DiceKit7ChancesVyXeXecfc":{"name":"init(chances:)","abstract":"<p>Creates a new <code>Chances</code> object with the given chances.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:7DiceKit7ChancesVXeip":{"name":"subscript(of:)","abstract":"<p>The chance of the given roll occurring.</p>","parent_name":"Chances"},"Structs/Chances.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Chances"},"Structs/Chances.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Chances"},"Structs/Chances.html":{"name":"Chances","abstract":"<p>A struct that represents the chances of different <code>Roll</code>s happening.</p>"},"Structs/Chance.html":{"name":"Chance","abstract":"<p>A struct that represents the chance or probability of something happening.</p>"},"Classes/DieSide.html#/s:7DiceKit7DieSideCyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Create a new DieSide with the given value.</p>","parent_name":"DieSide"},"Classes/DieSide.html#/s:7DiceKit7DieSideC5valuexvp":{"name":"value","abstract":"<p>The value that this DieSide will return when rolled.</p>","parent_name":"DieSide"},"Classes/DieSide.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"DieSide"},"Classes/DieSide.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"DieSide"},"Classes/CustomDie.html#/s:7DiceKit9CustomDieC5sidesXevp":{"name":"sides","abstract":"<p>A dictionary that maps the rolls of the die to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DieSide.html\">DieSide</a></code>s passed to the initializer</p>","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:7DiceKit9CustomDieC9replacing_4withACyxGAA0D4SideCyxG_AItF":{"name":"replacing(_:with:)","abstract":"<p>Creates a new <code>CustomDie</code>, replacing one side with a new one.</p>","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:7DiceKit9CustomDieCyACyxGAA0D4SideCyxGd_tKcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>CustomDie</code> with the given sides.</p>","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:7DiceKit9CustomDieC5sidesACyxGSayAA0D4SideCyxGG_tKcfc":{"name":"init(sides:)","abstract":"<p>Creates a new <code>CustomDie</code> with the given sides.</p>","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:7DiceKit9CustomDieC6copyOfACyxGAE_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>CustomDie</code> that is a copy of the given <code>CustomDie</code>.</p>","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:7DiceKit9CustomDieC4rollAA0D4SideCyxGyF":{"name":"roll()","abstract":"<p>Rolls this <code>CustomDie</code>.</p>","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"CustomDie"},"Classes/CustomDie.html#/s:7DiceKit9CustomDieC4copyACyxGyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>CustomDie</code> with separate memory.</p>","parent_name":"CustomDie"},"Classes/CustomDie.html":{"name":"CustomDie","abstract":"<p>A class that allows for dice with custom sides instead of numbers.</p>"},"Classes/DieSide.html":{"name":"DieSide","abstract":"<p>A class that masks a side, returning a custom value in lieu of a number.</p>"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC7chancesXevp":{"name":"chances","abstract":"<p>The rolls and the chances of them occurring.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC7chancesAcA7ChancesV_tKcfc":{"name":"init(chances:)","abstract":"<p>Creates a new <code>WeightedDie</code> with the given rolls and chances of them occurring.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC5sidesSivp":{"name":"sides","abstract":"<p>The number of possible <code>Roll</code>s.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>WeightedDie</code> that is a copy of the given <code>WeightedDie</code>.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC4rollyXeXeF":{"name":"roll()","abstract":"<p>Rolls this <code>WeightedDie</code> and returns the result as a <code>Roll</code>.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC13minimumResultXevp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/WeightedDie.html#/s:7DiceKit11WeightedDieC4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC13maximumResultXevp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/WeightedDie.html#/s:7DiceKit11WeightedDieC4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC19doubleAverageResultSdvp":{"name":"doubleAverageResult","abstract":"<p>The exact (double) average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/WeightedDie.html#/s:7DiceKit11WeightedDieC4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC13averageResultXevp":{"name":"averageResult","abstract":"<p>The average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/WeightedDie.html#/s:7DiceKit11WeightedDieC4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC8canReachyXeXeF":{"name":"canReach(_:_:)","abstract":"<p>Determines whether this <code>WeightedDie</code> can reach the target <code>Roll</code> using the given comparison type.</p>","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"WeightedDie"},"Classes/WeightedDie.html#/s:7DiceKit11WeightedDieC4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>WeightedDie</code> with separate memory.</p>","parent_name":"WeightedDie"},"Classes/Dice.html#/s:7DiceKit0A0C4diceSDyAA3DieCSiGvp":{"name":"dice","abstract":"<p>The dice that make up this collection, along with how many times they appear.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C08numberOfA0Sivp":{"name":"numberOfDice","abstract":"<p>The number of dice in this <code>Dice</code> instance.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C8modifierSivp":{"name":"modifier","abstract":"<p>The modifier added or subtracted from these <code>Dice</code></p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0CyAcA3DieCd_tcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4diceACSayAA3DieCG_tcfc":{"name":"init(dice:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_5countAcA3DieC_Sitcfc":{"name":"init(_:count:)","abstract":"<p>Creates a new <code>Dice</code> object with the given number of the specified die. This is essentially identical to <code>Dice(copyOf: die * count)</code>, but is more efficient.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0CyAcA3DieC3die_Si5counttd_tcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice. They should be in a (die: Die, count: Int) form, with the die being the type of die to add, and the count being the number of times to add it.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_12withModifierAcA3DieCd_Sitcfc":{"name":"init(_:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4dice12withModifierACSayAA3DieCG_Sitcfc":{"name":"init(dice:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_5count12withModifierAcA3DieC_S2itcfc":{"name":"init(_:count:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the given number of the specified die, along with the specified modifier. This is essentially identical to <code>Dice(copyOf: (die * count) + modifier)</code>, but is more efficient.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C_12withModifierAcA3DieC3die_Si5counttd_Sitcfc":{"name":"init(_:withModifier:)","abstract":"<p>Creates a new <code>Dice</code> object with the specified dice and modifier. The dice should be in a (die: Die, count: Int) form, with the die being the type of die to add, and the count being the number of times to add it.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0CyACSSKcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Dice</code> object from the specified string in dice notation.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>Dice</code> object that is a copy of the given <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4rollyXeXeF":{"name":"roll()","abstract":"<p>Rolls this <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C13minimumResultXevp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Dice.html#/s:7DiceKit0A0C4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C13maximumResultXevp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Dice.html#/s:7DiceKit0A0C4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C13averageResultXevp":{"name":"averageResult","abstract":"<p>The average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Dice.html#/s:7DiceKit0A0C4rollyXeXeF\">roll()</a></code> method.","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C8canReachyXeXeF":{"name":"canReach(_:_:)","abstract":"<p>Determines whether this <code>Dice</code> object can reach the target <code>Roll</code> using the given comparison type.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C11descriptionSSvp":{"name":"description","abstract":"<p>A description of this <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>A short, debug-usable description of this <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>Dice</code> with separate memory.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1poiyA2C_AA3DieCtFZ":{"name":"+(_:_:)","abstract":"<p>Adds some <code>Dice</code> and a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html\">Die</a></code> together, creating a new <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1poiyAcA3DieC_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds some <code>Dice</code> and a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html\">Die</a></code> together, creating a new <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds some <code>Dice</code> together, creating a new <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1poiyA2C_SitFZ":{"name":"+(_:_:)","abstract":"<p>Adds a modifier to a <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1poiyACSi_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds a modifier to a <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1poiyA2C_AA3DieC3die_Si5countttFZ":{"name":"+(_:_:)","abstract":"<p>Adds the given dice to the given <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1poiyAcA3DieC3die_Si5countt_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Adds the given dice to the given <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1soiyA2C_SitFZ":{"name":"-(_:_:)","abstract":"<p>Subtracts a modifier from a <code>Dice</code> object.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1moiyA2C_SitFZ":{"name":"*(_:_:)","abstract":"<p>Multiplies the given <code>Dice</code> object by the given multiplier.</p>","parent_name":"Dice"},"Classes/Dice.html#/s:7DiceKit0A0C1moiyACSi_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Multiplies the given <code>Dice</code> object by the given multiplier.</p>","parent_name":"Dice"},"Classes/Die.html#/s:7DiceKit3DieC5sidesSivp":{"name":"sides","abstract":"<p>The number of sides on this <code>Die</code>. This value does not need to be possible (for example, it can be 13), but it <em>does</em> need to be larger than 0.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC5sidesACSi_tKcfc":{"name":"init(sides:)","abstract":"<p>Creates a new <code>Die</code> with the given number of sides.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieCyACSSKcfc":{"name":"init(_:)","abstract":"<p>Creates a new <code>Die</code> from the given string in dice notation.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC6copyOfA2C_tcfc":{"name":"init(copyOf:)","abstract":"<p>Creates a new <code>Die</code> that is a copy of the given <code>Die</code>.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC4rollyXeXeF":{"name":"roll()","abstract":"<p>Rolls this <code>Die</code> and returns the result as a <code>Roll</code>.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC13minimumResultXevp":{"name":"minimumResult","abstract":"<p>The minimum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html#/s:7DiceKit3DieC4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC13maximumResultXevp":{"name":"maximumResult","abstract":"<p>The maximum possible result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html#/s:7DiceKit3DieC4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC19doubleAverageResultSdvp":{"name":"doubleAverageResult","abstract":"<p>The exact (double) average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html#/s:7DiceKit3DieC4rollyXeXeF\">roll()</a></code> method.","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC13averageResultXevp":{"name":"averageResult","abstract":"<p>The average result from using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html#/s:7DiceKit3DieC4rollyXeXeF\">roll()</a></code> method.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC8canReachyXeXeF":{"name":"canReach(_:_:)","abstract":"<p>Determines whether this <code>Die</code> can reach the target <code>Roll</code> using the given comparison type.</p>","parent_name":"Die"},"Classes/Die.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Die"},"Classes/Die.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Die"},"Classes/Die.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Die"},"Classes/Die.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Die"},"Classes/Die.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC4copyACyF":{"name":"copy()","abstract":"<p>Returns a copy of the given <code>Die</code> with separate memory.</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC2d4ACvpZ":{"name":"d4","abstract":"<p>A four-sided die (<code>d4</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC2d6ACvpZ":{"name":"d6","abstract":"<p>A six-sided die (<code>d6</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC2d8ACvpZ":{"name":"d8","abstract":"<p>An eight-sided die (<code>d8</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC3d10ACvpZ":{"name":"d10","abstract":"<p>A ten-sided die (<code>d10</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC3d12ACvpZ":{"name":"d12","abstract":"<p>A twelve-sided die (<code>d12</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC3d20ACvpZ":{"name":"d20","abstract":"<p>A twenty-sided die (<code>d20</code>).</p>","parent_name":"Die"},"Classes/Die.html#/s:7DiceKit3DieC4d100ACvpZ":{"name":"d100","abstract":"<p>A one hundred-sided die (<code>d100</code>).</p>","parent_name":"Die"},"Classes/Die.html":{"name":"Die","abstract":"<p>A representation of a single die.</p>"},"Classes/Dice.html":{"name":"Dice","abstract":"<p>A collection of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Die.html\">Die</a></code> objects and/or a modifier that can be rolled using the <code>roll()</code> method.</p>"},"Classes/WeightedDie.html":{"name":"WeightedDie","abstract":"<p>A representation of a weighted die; i.e. a die whose sides do not necessarily have the same chance of being rolled.</p>"},"Rollables.html":{"name":"Rollables"},"Custom%20Dice.html":{"name":"Custom Dice"},"Probability.html":{"name":"Probability"}}